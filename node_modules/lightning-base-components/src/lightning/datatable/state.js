/**
 * This function returns the initial state of the datatable.
 * The state object is further manipulated while it is passed around by datatable
 *
 * TODO: Check to see if there are other items that need to be added to the default state
 * @returns {Object} - intial state of the datatable
 */
export const getDefaultState = function () {
    return {
        // columns
        columns: [],
        hideCheckboxColumn: false,

        // rows
        data: [],
        keyField: undefined,
        rows: [],
        indexes: {},

        // selector
        selectedRowsKeys: {},
        maxRowSelection: undefined,

        headerIndexes: {},
        hideTableHeader: false,

        // keyboard
        keyboardMode: 'NAVIGATION',
        rowMode: false,
        activeCell: undefined,
        tabindex: 0,
        cellToFocusNext: null,
        cellClicked: false,
        normalized: false,

        // header actions
        wrapText: {},
        wrapTextMaxLines: undefined,

        // sort
        sortedBy: undefined,
        sortedDirection: undefined,
        defaultSortDirection: 'asc',

        // row number
        showRowNumberColumn: false,
        rowNumberOffset: 0,

        // resizer
        resizeColumnDisabled: false,
        resizeStep: 10,
        columnWidths: [],
        tableWidth: 0,
        minColumnWidth: 50,
        maxColumnWidth: 1000,
        columnWidthsMode: 'fixed',

        // infinite loading
        enableInfiniteLoading: false,
        loadMoreOffset: 20,
        isLoading: false,

        // table render mode
        renderModeRoleBased: false,

        // viewport rendering
        enableViewportRendering: undefined,

        // inline edit
        inlineEdit: {
            dirtyValues: {},
        },

        // errors
        errors: {
            rows: {},
            table: {},
        },
    };
};
