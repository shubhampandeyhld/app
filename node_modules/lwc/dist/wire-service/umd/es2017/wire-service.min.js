!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).WireService={})}(this,(function(e){"use strict";function t(e){return void 0===e}class n{constructor(e){this.type="ValueChangedEvent",this.value=e}}const{freeze:i,defineProperty:r,isExtensible:s}=Object;const{forEach:c,splice:a,indexOf:o}=Array.prototype,d="connect",l="disconnect",h="config";function u(e,t){const n=o.call(e,t);n>-1&&a.call(e,n,1)}class f{constructor(e){this.connecting=[],this.disconnecting=[],this.configuring=[],this.isFirstUpdate=!0,this.callback=e,this.wiredElementHost=e.$$DeprecatedWiredElementHostKey$$,this.dynamicParamsNames=e.$$DeprecatedWiredParamsMetaKey$$,this.eventTarget={addEventListener:(e,t)=>{switch(e){case d:this.connecting.push(t);break;case l:this.disconnecting.push(t);break;case h:this.configuring.push(t),void 0!==this.currentConfig&&t.call(void 0,this.currentConfig);break;default:throw new Error(`Invalid event type ${e}.`)}},removeEventListener:(e,t)=>{switch(e){case d:u(this.connecting,t);break;case l:u(this.disconnecting,t);break;case h:u(this.configuring,t);break;default:throw new Error(`Invalid event type ${e}.`)}},dispatchEvent:e=>{if(!(e instanceof n)){if("wirecontextevent"===e.type)return this.wiredElementHost.dispatchEvent(e);throw new Error(`Invalid event type ${e.type}.`)}{const t=e.value;this.callback(t)}return!1}}}update(e){var n,i;(!this.isFirstUpdate||(this.isFirstUpdate=!1,function(e){return 0===Object.keys(e).length}(e)||function(e,n){return 0===n.length||n.some((n=>!t(e[n])))}(e,this.dynamicParamsNames)))&&((t(this.currentConfig)||(n=e,i=this.currentConfig,this.dynamicParamsNames.some((e=>n[e]!==i[e]))))&&(this.currentConfig=e,c.call(this.configuring,(t=>{t.call(void 0,e)}))))}connect(){c.call(this.connecting,(e=>e.call(void 0)))}disconnect(){c.call(this.disconnecting,(e=>e.call(void 0)))}}e.ValueChangedEvent=n,e.register=function(e,t){if(null==e||!s(e))throw new TypeError("adapter id must be extensible");if("function"!=typeof t)throw new TypeError("adapter factory must be a callable");if("adapter"in e)throw new TypeError("adapter id is already associated to an adapter factory");const n=class extends f{constructor(e){super(e),t(this.eventTarget)}};i(n),i(n.prototype),r(e,"adapter",{writable:!1,configurable:!1,value:n})},e.registerWireService=function(){}}));
//# sourceMappingURL=wire-service.min.js.map
